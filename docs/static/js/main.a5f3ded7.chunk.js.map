{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","response","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GifExpertApp","root","document","querySelector","ReactDOM","render"],"mappings":"mMA6BeA,EA1BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACrB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAdhB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,QCIZG,EATK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAChC,OACE,sBAAKC,UAAU,2DAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCNGK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBN,EADgB,0FACyEO,UAC7FF,GAFoB,gDAICG,MAAMR,GAJP,cAIhBS,EAJgB,gBAKCA,EAASC,OALV,uBAKdC,EALc,EAKdA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVf,kBAcfY,GAde,4CAAH,sDCuBNK,EAlBC,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SACjB,ECH0B,SAACA,GAC3B,MAA0BrB,mBAAS,CACjC2B,KAAM,GACNO,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAU,WACRjB,EAASC,GAAUiB,MAAK,SAACP,GACvBK,EAAS,CACPT,KAAMI,EACNG,SAAS,SAGZ,CAACb,IAEGc,EDZ0BI,CAAalB,GAAjCU,EAAb,EAAQJ,KAAaO,EAArB,EAAqBA,QAErB,OACE,qCACE,6BAAKb,IAEHa,GAAW,2CAEb,qBAAKjB,UAAU,YAAf,SACGc,EAAOF,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIhB,aEKxB0B,EAjBM,WACnB,MAAoCxC,mBAAS,CAAC,gBAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACGS,EAAWqB,KAAI,SAACR,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCRzBoB,G,MAAOC,SAASC,cAAc,SAEpCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.a5f3ded7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 0) {\r\n      setCategories((categories) => [inputValue, ...categories]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","import React from \"react\";\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__bounce animate__delay-2s\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","export const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=NgmoeFJeDL5Rl7s3mcIJsTAQ0hvEVjb8&q=${encodeURI(\r\n    category\r\n  )}&limit=25&offset=0&rating=g&lang=en`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3>{category}</h3>\r\n\r\n      { loading && <p>Loading...</p>}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifts(category).then((images) => {\r\n      setState({\r\n        data: images,\r\n        loading: false\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Dragon Ball\"]);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifGrid key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nconst root = document.querySelector('#app');\r\n\r\nReactDOM.render(<GifExpertApp />, root);"],"sourceRoot":""}